buildscript {
    repositories {
        maven { url 'http://artifactory-px.ops.rpc.revinate.net/artifactory/repo' }
    }
    dependencies {
        classpath 'com.revinate:gradle-docker-plugin:1.5.15'
    }
}

ext {
    dockerNetwork = 'test-network'
    cassandraContainer = 'cassandra'
    cassandraImage = 'revinate/cassandra-lucene:3.0.7'
    sparkJobServerContainer = 'spark-jobserver'
    dockerHostIp = System.env.DOCKER_HOST_IP
}

task createNetwork(type: DockerCreateNetwork) {
    networkName = dockerNetwork
}

task removeAllContainers(type: DockerRemoveContainer) {
    containerIds = [
            sparkJobServerContainer,
            cassandraContainer
    ]
    removeVolumes = true
}

task removeCassandraContainer(type: DockerRemoveContainer) {
    containerIds = [cassandraContainer]
    removeVolumes = true
}

task createSparkJobServerImage(type: DockerCreateImage, dependsOn: [shadowJar]) {
    targetFolder = projectDir
    tag = sparkJobServerContainer
}

task startCassandraContainer(type: DockerStartContainer, dependsOn: createNetwork) {
    containerName = cassandraContainer
    image = cassandraImage
    connectedNetworks = dockerNetwork
    dockerArgs = [
            '-p', '9042:9042'
    ]
}

task configureCassandraContainer(type: DockerSingleRun) {
    image = cassandraImage
    dockerArgs = [
            '--net', dockerNetwork,
            '-v', "$projectDir/docker/cassandra-scripts:/scripts",
            '-w', '/scripts'
    ]
    command = ['./setup-cassandra.sh']
}

startCassandraContainer.finalizedBy configureCassandraContainer

task startSparkJobServerContainer(type: DockerStartContainer, dependsOn: [createNetwork, createSparkJobServerImage, startCassandraContainer]) {
    containerName = sparkJobServerContainer
    image = sparkJobServerContainer
    connectedNetworks = dockerNetwork
    dockerArgs = [
            '-p', '8090:8090',
            '-e', 'CASSANDRA_CONTACT_POINTS=cassandra'
    ]
    command = ['--jars /app/spark-jobserver-cassandra-dao.jar']
}

task startDependencyContainers(dependsOn: [
        startCassandraContainer,
        startSparkJobServerContainer])

